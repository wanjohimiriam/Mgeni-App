// Generated by view binder compiler. Do not edit!
package com.impax.mgeni.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.impax.mgeni.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardViewDesignBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView tvCheckInTime;

  @NonNull
  public final TextView tvIcon;

  @NonNull
  public final TextView tvVisitorHost;

  @NonNull
  public final TextView tvVisitorName;

  @NonNull
  public final TextView tvVisitorReason;

  private CardViewDesignBinding(@NonNull RelativeLayout rootView, @NonNull TextView tvCheckInTime,
      @NonNull TextView tvIcon, @NonNull TextView tvVisitorHost, @NonNull TextView tvVisitorName,
      @NonNull TextView tvVisitorReason) {
    this.rootView = rootView;
    this.tvCheckInTime = tvCheckInTime;
    this.tvIcon = tvIcon;
    this.tvVisitorHost = tvVisitorHost;
    this.tvVisitorName = tvVisitorName;
    this.tvVisitorReason = tvVisitorReason;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardViewDesignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardViewDesignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_view_design, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardViewDesignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvCheckInTime;
      TextView tvCheckInTime = ViewBindings.findChildViewById(rootView, id);
      if (tvCheckInTime == null) {
        break missingId;
      }

      id = R.id.tvIcon;
      TextView tvIcon = ViewBindings.findChildViewById(rootView, id);
      if (tvIcon == null) {
        break missingId;
      }

      id = R.id.tvVisitorHost;
      TextView tvVisitorHost = ViewBindings.findChildViewById(rootView, id);
      if (tvVisitorHost == null) {
        break missingId;
      }

      id = R.id.tvVisitorName;
      TextView tvVisitorName = ViewBindings.findChildViewById(rootView, id);
      if (tvVisitorName == null) {
        break missingId;
      }

      id = R.id.tvVisitorReason;
      TextView tvVisitorReason = ViewBindings.findChildViewById(rootView, id);
      if (tvVisitorReason == null) {
        break missingId;
      }

      return new CardViewDesignBinding((RelativeLayout) rootView, tvCheckInTime, tvIcon,
          tvVisitorHost, tvVisitorName, tvVisitorReason);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
