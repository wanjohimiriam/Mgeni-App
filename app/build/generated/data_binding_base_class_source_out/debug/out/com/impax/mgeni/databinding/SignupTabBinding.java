// Generated by view binder compiler. Do not edit!
package com.impax.mgeni.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.impax.mgeni.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupTabBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout ConfirmPasswordTextField;

  @NonNull
  public final CardView ConfirmpassLayout;

  @NonNull
  public final TextInputLayout PasswordTextField;

  @NonNull
  public final TextInputLayout PhoneTTextField;

  @NonNull
  public final CardView companyLayout;

  @NonNull
  public final TextInputEditText emailAddress;

  @NonNull
  public final CardView passLayout;

  @NonNull
  public final CardView phoneLayoutt;

  @NonNull
  public final Button signBtn;

  @NonNull
  public final TextInputEditText textConfirmPassPassword;

  @NonNull
  public final TextInputEditText textPassword;

  @NonNull
  public final TextInputEditText texttPhone;

  @NonNull
  public final TextInputLayout usernameTextField;

  private SignupTabBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout ConfirmPasswordTextField, @NonNull CardView ConfirmpassLayout,
      @NonNull TextInputLayout PasswordTextField, @NonNull TextInputLayout PhoneTTextField,
      @NonNull CardView companyLayout, @NonNull TextInputEditText emailAddress,
      @NonNull CardView passLayout, @NonNull CardView phoneLayoutt, @NonNull Button signBtn,
      @NonNull TextInputEditText textConfirmPassPassword, @NonNull TextInputEditText textPassword,
      @NonNull TextInputEditText texttPhone, @NonNull TextInputLayout usernameTextField) {
    this.rootView = rootView;
    this.ConfirmPasswordTextField = ConfirmPasswordTextField;
    this.ConfirmpassLayout = ConfirmpassLayout;
    this.PasswordTextField = PasswordTextField;
    this.PhoneTTextField = PhoneTTextField;
    this.companyLayout = companyLayout;
    this.emailAddress = emailAddress;
    this.passLayout = passLayout;
    this.phoneLayoutt = phoneLayoutt;
    this.signBtn = signBtn;
    this.textConfirmPassPassword = textConfirmPassPassword;
    this.textPassword = textPassword;
    this.texttPhone = texttPhone;
    this.usernameTextField = usernameTextField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupTabBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupTabBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup_tab, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupTabBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ConfirmPasswordTextField;
      TextInputLayout ConfirmPasswordTextField = ViewBindings.findChildViewById(rootView, id);
      if (ConfirmPasswordTextField == null) {
        break missingId;
      }

      id = R.id.ConfirmpassLayout;
      CardView ConfirmpassLayout = ViewBindings.findChildViewById(rootView, id);
      if (ConfirmpassLayout == null) {
        break missingId;
      }

      id = R.id.PasswordTextField;
      TextInputLayout PasswordTextField = ViewBindings.findChildViewById(rootView, id);
      if (PasswordTextField == null) {
        break missingId;
      }

      id = R.id.PhoneTTextField;
      TextInputLayout PhoneTTextField = ViewBindings.findChildViewById(rootView, id);
      if (PhoneTTextField == null) {
        break missingId;
      }

      id = R.id.companyLayout;
      CardView companyLayout = ViewBindings.findChildViewById(rootView, id);
      if (companyLayout == null) {
        break missingId;
      }

      id = R.id.emailAddress;
      TextInputEditText emailAddress = ViewBindings.findChildViewById(rootView, id);
      if (emailAddress == null) {
        break missingId;
      }

      id = R.id.passLayout;
      CardView passLayout = ViewBindings.findChildViewById(rootView, id);
      if (passLayout == null) {
        break missingId;
      }

      id = R.id.phoneLayoutt;
      CardView phoneLayoutt = ViewBindings.findChildViewById(rootView, id);
      if (phoneLayoutt == null) {
        break missingId;
      }

      id = R.id.signBtn;
      Button signBtn = ViewBindings.findChildViewById(rootView, id);
      if (signBtn == null) {
        break missingId;
      }

      id = R.id.textConfirmPassPassword;
      TextInputEditText textConfirmPassPassword = ViewBindings.findChildViewById(rootView, id);
      if (textConfirmPassPassword == null) {
        break missingId;
      }

      id = R.id.textPassword;
      TextInputEditText textPassword = ViewBindings.findChildViewById(rootView, id);
      if (textPassword == null) {
        break missingId;
      }

      id = R.id.texttPhone;
      TextInputEditText texttPhone = ViewBindings.findChildViewById(rootView, id);
      if (texttPhone == null) {
        break missingId;
      }

      id = R.id.usernameTextField;
      TextInputLayout usernameTextField = ViewBindings.findChildViewById(rootView, id);
      if (usernameTextField == null) {
        break missingId;
      }

      return new SignupTabBinding((ConstraintLayout) rootView, ConfirmPasswordTextField,
          ConfirmpassLayout, PasswordTextField, PhoneTTextField, companyLayout, emailAddress,
          passLayout, phoneLayoutt, signBtn, textConfirmPassPassword, textPassword, texttPhone,
          usernameTextField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
